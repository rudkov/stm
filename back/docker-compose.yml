services:
    # nginx:
    #     build:
    #         context: ./
    #         dockerfile: nginx.production.dockerfile
    #     volumes:
    #         - ./public/app/build:/usr/share/nginx/html
    #     ports:
    #         - "80:80"
    #     profiles: [prod]
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        ports:
            - '81:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - adminer
    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
          retries: 3
          timeout: 5s
        restart: always
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - sail
    redis:
        image: 'redis:alpine'
        ports:
            - '6379:6379'
        networks:
            - sail
        restart: always
    mailhog:
        image: mailhog/mailhog:v1.0.1
        ports:
            - "8025:8025"
        logging:
            driver: none
        networks:
            - sail

networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
